name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  anti-fabrication:
    runs-on: ubuntu-latest
    name: Anti-Fabrication & Marketing Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Anti-Fabrication Tests
      run: npm run test tools/antiFabrication.spec.ts
      
    - name: Run No-Marketing Tests  
      run: npm run test tools/noMarketing.spec.ts
      
    - name: Lint codebase
      run: npm run lint
      continue-on-error: true
      
    - name: Check TypeScript
      run: npx tsc --noEmit
      
  benchmark-test:
    runs-on: ubuntu-latest
    name: Real Benchmark System Test
    needs: anti-fabrication
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Test CLI Benchmark Tool
      run: npx tsx server/cli/bench.ts --help
      
    - name: Test Environment Validation
      run: npx tsx -e "import('./server/env.ts').then(m => console.log('✅ Environment validation works'))"
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://test:test@localhost:5432/test
        
    - name: Test Health Endpoint Structure
      run: npx tsx -e "
        import('./server/routes/health.ts').then(m => {
          console.log('✅ Health routes module loaded');
          if (!m.health) throw new Error('health router not exported');
          console.log('✅ Health router available');
        })
      "

  security-scan:
    runs-on: ubuntu-latest
    name: Security & Dependencies
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Audit dependencies
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: Check for hardcoded secrets
      run: |
        if grep -r "sk-" server/ --exclude-dir=node_modules || grep -r "API_KEY.*=" server/ --exclude-dir=node_modules; then
          echo "❌ Potential hardcoded secrets found"
          exit 1
        else
          echo "✅ No hardcoded secrets detected"
        fi